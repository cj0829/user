<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<list>
				<bean class="org.csr.core.format.SqlTimeFormatAnnotationFormatterFactory" />
				<bean class="org.csr.core.format.SetBeanAnnotationFormatterFactory" />
			</list>
		</property>
	</bean>
	<bean id="localeResolver" class="org.csr.core.i18n.CoreAcceptHeaderLocaleResolver"></bean>
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 国际化信息所在的文件名 -->
		<property name="basename" value="messages" />
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="fallbackToSystemLocale" value="false" />
	</bean>
	<mvc:annotation-driven conversion-service="conversionService" />
	<mvc:interceptors>  
	    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean id="pageInterceptor" class="org.csr.core.persistence.intercepter.PageInterceptor"/>
		 <!-- 使用自动定义的
		<bean id="cacheDictionaryInterceptor" class="org.csr.elearning.space.support.intercepter.CacheParameterInterceptor"/>
		 -->
	</mvc:interceptors> 
	<!-- 自动搜索@Controller、标注的类 -->
	<context:component-scan base-package="org.csr">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 自动搜索@Controller、标注的类 -->
	<context:component-scan base-package="com.tmai">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 文件上传监听 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="order" value="1" />
		<property name="location" value="/WEB-INF/classes/action-views.xml"/>
	</bean>
</beans>